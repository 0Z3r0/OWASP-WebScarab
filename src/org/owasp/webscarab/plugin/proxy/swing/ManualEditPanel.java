/*
 * $Id: ManualEditPanel.java,v 1.1 2004/10/31 21:10:22 rogan Exp $
 * ProxyUI.java
 *
 * Created on February 17, 2003, 9:05 PM
 */

package org.owasp.webscarab.plugin.proxy.swing;

import org.owasp.webscarab.model.Request;
import org.owasp.webscarab.model.Response;

import org.owasp.webscarab.plugin.proxy.ManualEdit;
import org.owasp.webscarab.plugin.proxy.ManualEditUI;

import org.owasp.webscarab.ui.swing.SwingPluginUI;

import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;

import javax.swing.ListModel;
import javax.swing.JPanel;

/**
 *
 * @author  rdawes
 */
public class ManualEditPanel extends javax.swing.JPanel implements SwingPluginUI, ManualEditUI {
    
    private ManualEdit _manualEdit;
    
    /** Creates new form ManualEditPanel */
    public ManualEditPanel(ManualEdit manualEdit) {
        _manualEdit = manualEdit;
        initComponents();
        configure();
        interceptMethodList.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent evt) {
                interceptMethodListValueChanged(evt);
            }
        });
        _manualEdit.setUI(this);
    }
    
    public String getPluginName() {
        return new String("Manual Edit");
    }
    
    public void configure() {
        boolean enabled = _manualEdit.getInterceptRequest();
        interceptRequestCheckBox.setSelected(enabled);
        
        interceptIncludeRegexTextField.setEnabled(enabled);
        interceptIncludeRegexTextField.setText(_manualEdit.getIncludeRegex());
        
        interceptExcludeRegexTextField.setEnabled(enabled);
        interceptExcludeRegexTextField.setText(_manualEdit.getExcludeRegex());

        interceptMethodList.setEnabled(enabled);
        String[] interceptMethods = _manualEdit.getInterceptMethods();
        interceptMethodList.setSelectedIndices(getIndices(interceptMethods,interceptMethodList.getModel()));

        interceptResponseCheckBox.setSelected(_manualEdit.getInterceptResponse());
    }
    
    private int[] getIndices(String[] items, ListModel model) {
        int[] indices = new int[items.length];
        for (int i=0; i< items.length; i++) {
            boolean found = false;
            for (int j=0; j<model.getSize(); j++) {
                if (items[i].equals(model.getElementAt(j))) {
                    indices[i] = j;
                    found = true;
                }
            }
            if (!found) {
                indices[i] = -1;
                System.err.println("Did not find item["+i+"] == '" + items[i] + "' in the list model");
            }
        }
        return indices;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        interceptrequestPanel = new javax.swing.JPanel();
        interceptRequestCheckBox = new javax.swing.JCheckBox();
        interceptIncludeLabel = new javax.swing.JLabel();
        interceptIncludeRegexTextField = new javax.swing.JTextField();
        interceptExcludeLabel = new javax.swing.JLabel();
        interceptExcludeRegexTextField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        interceptMethodList = new javax.swing.JList();
        interceptResponsePanel = new javax.swing.JPanel();
        interceptResponseCheckBox = new javax.swing.JCheckBox();
        interceptExcludeButton = new javax.swing.JButton();
        interceptIncludeButton = new javax.swing.JButton();
        interceptAddNewTextField = new javax.swing.JTextField();
        interceptAddNewButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        interceptIncludeMIMEList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        interceptExcludeMIMEList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        interceptrequestPanel.setLayout(new java.awt.GridBagLayout());

        interceptRequestCheckBox.setText("Intercept requests : ");
        interceptRequestCheckBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        interceptRequestCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interceptRequestCheckBoxActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptrequestPanel.add(interceptRequestCheckBox, gridBagConstraints);

        interceptIncludeLabel.setText("Include Paths matching : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptrequestPanel.add(interceptIncludeLabel, gridBagConstraints);

        interceptIncludeRegexTextField.setToolTipText("Use a regular expression to select which URLs to intercept. Leave blank to ignore.");
        interceptIncludeRegexTextField.setEnabled(false);
        interceptIncludeRegexTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interceptIncludeRegexTextFieldActionPerformed(evt);
            }
        });
        interceptIncludeRegexTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                interceptIncludeRegexTextFieldFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptrequestPanel.add(interceptIncludeRegexTextField, gridBagConstraints);

        interceptExcludeLabel.setText("Exclude paths matching : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptrequestPanel.add(interceptExcludeLabel, gridBagConstraints);

        interceptExcludeRegexTextField.setToolTipText("Use a regular expression to select which URLs not to intercept. Leave blank to ignore.");
        interceptExcludeRegexTextField.setEnabled(false);
        interceptExcludeRegexTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interceptExcludeRegexTextFieldActionPerformed(evt);
            }
        });
        interceptExcludeRegexTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                interceptExcludeRegexTextFieldFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptrequestPanel.add(interceptExcludeRegexTextField, gridBagConstraints);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setViewportBorder(new javax.swing.border.TitledBorder("Methods"));
        jScrollPane3.setMinimumSize(new java.awt.Dimension(100, 120));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(100, 120));
        jScrollPane3.setAutoscrolls(true);
        interceptMethodList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "GET", "POST", "HEAD", "PUT", "DELETE", "TRACE", "PROPFIND", "OPTIONS" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        interceptMethodList.setToolTipText("Select which request methods to intercept");
        interceptMethodList.setVisibleRowCount(0);
        interceptMethodList.setEnabled(false);
        jScrollPane3.setViewportView(interceptMethodList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 1.0;
        interceptrequestPanel.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(interceptrequestPanel, gridBagConstraints);

        interceptResponsePanel.setLayout(new java.awt.GridBagLayout());

        interceptResponseCheckBox.setText("Intercept Responses :");
        interceptResponseCheckBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        interceptResponseCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interceptResponseCheckBoxActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptResponsePanel.add(interceptResponseCheckBox, gridBagConstraints);

        interceptExcludeButton.setText("Exclude >>");
        interceptExcludeButton.setPreferredSize(null);
        interceptExcludeButton.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weighty = 1.0;
        interceptResponsePanel.add(interceptExcludeButton, gridBagConstraints);

        interceptIncludeButton.setText("<< Include");
        interceptIncludeButton.setMinimumSize(new java.awt.Dimension(96, 26));
        interceptIncludeButton.setPreferredSize(null);
        interceptIncludeButton.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        interceptResponsePanel.add(interceptIncludeButton, gridBagConstraints);

        interceptAddNewTextField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        interceptResponsePanel.add(interceptAddNewTextField, gridBagConstraints);

        interceptAddNewButton.setText("<< Add new");
        interceptAddNewButton.setMinimumSize(new java.awt.Dimension(96, 26));
        interceptAddNewButton.setPreferredSize(null);
        interceptAddNewButton.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        interceptResponsePanel.add(interceptAddNewButton, gridBagConstraints);

        jScrollPane4.setMinimumSize(new java.awt.Dimension(32, 100));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(45, 120));
        interceptIncludeMIMEList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "text/*" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        interceptIncludeMIMEList.setToolTipText("Select which MIME-Types to intercept. Use the Exclude and Include buttons to choose.");
        interceptIncludeMIMEList.setEnabled(false);
        jScrollPane4.setViewportView(interceptIncludeMIMEList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        interceptResponsePanel.add(jScrollPane4, gridBagConstraints);

        jLabel1.setText("Include MIME-Types");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptResponsePanel.add(jLabel1, gridBagConstraints);

        jScrollPane5.setMinimumSize(new java.awt.Dimension(32, 100));
        jScrollPane5.setPreferredSize(new java.awt.Dimension(85, 120));
        interceptExcludeMIMEList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "image/*", "application/*", "x-audio/*" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        interceptExcludeMIMEList.setToolTipText("Select which MIME-Types not to intercept. Use the Exclude and Include buttons to choose.");
        interceptExcludeMIMEList.setEnabled(false);
        jScrollPane5.setViewportView(interceptExcludeMIMEList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        interceptResponsePanel.add(jScrollPane5, gridBagConstraints);

        jLabel2.setText("Exclude MIME-Types");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptResponsePanel.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(interceptResponsePanel, gridBagConstraints);

    }//GEN-END:initComponents

    private void interceptExcludeRegexTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_interceptExcludeRegexTextFieldFocusLost
        _manualEdit.setExcludeRegex(interceptExcludeRegexTextField.getText());
    }//GEN-LAST:event_interceptExcludeRegexTextFieldFocusLost

    private void interceptExcludeRegexTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interceptExcludeRegexTextFieldActionPerformed
        _manualEdit.setExcludeRegex(interceptExcludeRegexTextField.getText());
    }//GEN-LAST:event_interceptExcludeRegexTextFieldActionPerformed

    private void interceptIncludeRegexTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_interceptIncludeRegexTextFieldFocusLost
        _manualEdit.setIncludeRegex(interceptIncludeRegexTextField.getText());
    }//GEN-LAST:event_interceptIncludeRegexTextFieldFocusLost

    private void interceptIncludeRegexTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interceptIncludeRegexTextFieldActionPerformed
        _manualEdit.setIncludeRegex(interceptIncludeRegexTextField.getText());
    }//GEN-LAST:event_interceptIncludeRegexTextFieldActionPerformed

    private void interceptResponseCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interceptResponseCheckBoxActionPerformed
        _manualEdit.setInterceptResponse(interceptResponseCheckBox.isSelected());
    }//GEN-LAST:event_interceptResponseCheckBoxActionPerformed
            
    private void interceptRequestCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interceptRequestCheckBoxActionPerformed
        boolean enabled = interceptRequestCheckBox.isSelected();
        interceptIncludeRegexTextField.setEnabled(enabled);
        interceptExcludeRegexTextField.setEnabled(enabled);
        interceptMethodList.setEnabled(enabled);
        _manualEdit.setInterceptRequest(enabled);
    }//GEN-LAST:event_interceptRequestCheckBoxActionPerformed
    
    private void interceptMethodListValueChanged(ListSelectionEvent evt) {
        int[] indices = interceptMethodList.getSelectedIndices();
        String[] methods = new String[indices.length];
        ListModel lm = interceptMethodList.getModel();
        for (int i=0; i< indices.length; i++) {
            methods[i] = (String) lm.getElementAt(indices[i]);
        }
        _manualEdit.setInterceptMethods(methods);
    }
    
    public JPanel getPanel() {
        return this;
    }
    
    public javax.swing.Action[] getConversationActions() {
        return null;
    }
    
    public javax.swing.Action[] getURLActions() {
        return null;
    }
    
    public Request editRequest(Request request) {
        return new ManualEditFrame().editRequest(request);
    }
    
    public Response editResponse(Request request, Response response) {
        return new ManualEditFrame().editResponse(request, response);
    }
    
    public void setModel(org.owasp.webscarab.model.SiteModel model) {
    }
    
    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled);
        interceptRequestCheckBox.setEnabled(enabled);
        interceptResponseCheckBox.setEnabled(enabled);
        interceptMethodList.setEnabled(enabled && interceptRequestCheckBox.isSelected());
        interceptIncludeRegexTextField.setEnabled(enabled && interceptRequestCheckBox.isSelected());
        interceptExcludeRegexTextField.setEnabled(enabled && interceptRequestCheckBox.isSelected());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton interceptAddNewButton;
    private javax.swing.JTextField interceptAddNewTextField;
    private javax.swing.JButton interceptExcludeButton;
    private javax.swing.JLabel interceptExcludeLabel;
    private javax.swing.JList interceptExcludeMIMEList;
    private javax.swing.JTextField interceptExcludeRegexTextField;
    private javax.swing.JButton interceptIncludeButton;
    private javax.swing.JLabel interceptIncludeLabel;
    private javax.swing.JList interceptIncludeMIMEList;
    private javax.swing.JTextField interceptIncludeRegexTextField;
    private javax.swing.JList interceptMethodList;
    private javax.swing.JCheckBox interceptRequestCheckBox;
    private javax.swing.JCheckBox interceptResponseCheckBox;
    private javax.swing.JPanel interceptResponsePanel;
    private javax.swing.JPanel interceptrequestPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables
    
}
