/*
 * ConversationSearchFrame.java
 *
 * Created on May 13, 2004, 11:43 AM
 */

package org.owasp.webscarab.ui.swing;

import org.owasp.webscarab.model.SiteModel;
import org.owasp.webscarab.util.ConversationCriteria;

import java.util.ArrayList;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author  knoppix
 */
public class ConversationSearchFrame extends javax.swing.JFrame {
    
    private SiteModel _siteModel;
    private CriteriaTableModel _criteriaTableModel;
    // private ConversationTablePanel _conversationTablePanel;
    
    /** Creates new form ConversationSearchFrame */
    public ConversationSearchFrame(SiteModel siteModel) {
        _siteModel = siteModel;
        initComponents();
        _criteriaTableModel = new CriteriaTableModel();
        criteriaTable.setModel(_criteriaTableModel);
        // _conversationTablePanel = new ConversationTablePanel(siteModel);
        
        // conversationTablePanel.add(_conversationTablePanel);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        criteriaTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        searchButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        conversationTablePanel = new javax.swing.JPanel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("Conversation Search");
        jPanel1.setLayout(new java.awt.GridBagLayout());

        criteriaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        criteriaTable.setToolTipText("Until I get proper editors for the table, use the following items:\n\n\"Request Method\", \"Request URL\", \"Request headers\", \"Request Body\", \"Response Status\", \"Response Headers\", \"Response Body\"\n\nand \n\n\"equals\", \"not equals\", \"contains\", \"not contains\", \"matches\", \"not matches\"");
        jScrollPane2.setViewportView(criteriaTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane2, gridBagConstraints);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(addButton, gridBagConstraints);

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(deleteButton, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(searchButton, gridBagConstraints);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(cancelButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanel1, gridBagConstraints);

        conversationTablePanel.setLayout(new java.awt.BorderLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(conversationTablePanel, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // _conversationTablePanel.setFilterCriteria(_criteriaTableModel.getCriteria());
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int rowIndex = criteriaTable.getSelectedRow();
        if (rowIndex > -1) {
            _criteriaTableModel.removeRow(rowIndex);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        int rowIndex = criteriaTable.getSelectedRow();
        if (rowIndex > -1) {
            _criteriaTableModel.insertRow(rowIndex);
        } else {
            _criteriaTableModel.insertRow(_criteriaTableModel.getRowCount());
        }
    }//GEN-LAST:event_addButtonActionPerformed
    
    /** Exit the Application */    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new ConversationSearchFrame(null).show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel conversationTablePanel;
    private javax.swing.JTable criteriaTable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
    
    private class CriteriaTableModel extends AbstractTableModel {
        
        private ArrayList _criteria = new ArrayList();
        private String[] _names = new String[] { "Logic", "Location", "Operation", "Match"};
        
        public String getColumnName(int column) {
            return _names[column];
        }
        
        public void setCriteria(ConversationCriteria[] criteria) {
            _criteria.clear();
            for (int i=0; i<criteria.length; i++) {
                _criteria.add(new String[] {criteria[i].getLogic(), criteria[i].getLocation(), criteria[i].getOperation(), criteria[i].getMatch()});
            }
            fireTableDataChanged();
        }
        
        public ConversationCriteria[] getCriteria() {
            ConversationCriteria[] criteria = new ConversationCriteria[_criteria.size()];
            for (int i=0; i<criteria.length; i++) {
                String[] row = (String[]) _criteria.get(i);
                criteria[i] = new ConversationCriteria(row[0],row[1],row[2],row[3]);
            }
            return criteria;
        }
        
        public int getColumnCount() {
            return _names.length;
        }
        
        public int getRowCount() {
            return _criteria.size();
        }
        
        public Object getValueAt(int rowIndex, int columnIndex) {
            String[] row = (String[]) _criteria.get(rowIndex);
            return row[columnIndex];
        }
        
        public void insertRow(int rowIndex) {
            _criteria.add(rowIndex, new String[] {"OR", "Request URL", "matches", ".*"});
            fireTableRowsInserted(rowIndex, rowIndex);
        }
        
        public void removeRow(int rowIndex) {
            _criteria.remove(rowIndex);
            fireTableRowsDeleted(rowIndex, rowIndex);
        }
        
        public void setValueAt(Object aValue, int rowIndex, int colIndex) {
            if (aValue instanceof String) {
                String[] row = (String[]) _criteria.get(rowIndex);
                row[colIndex] = (String) aValue;
                fireTableCellUpdated(rowIndex, colIndex);
            }
        }
        
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return true;
        }
        
    }
    
}
