/*
 * ObjectTreePanel.java
 *
 * Created on September 16, 2003, 6:27 PM
 */

package org.owasp.webscarab.ui.swing;

import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import java.util.Map;
import java.util.Collection;
import java.util.Iterator;
import java.util.Vector;
import java.util.ArrayList;
import java.util.TreeMap;

import javax.swing.event.TreeSelectionListener;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.TreeSelectionModel;
import javax.swing.tree.TreePath;

import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;
import javax.swing.JPanel;

/**
 *
 * @author  rdawes
 */
public class ObjectTreePanel extends javax.swing.JPanel {
    
    private final String[] classes = new String[] { "null", "java.lang.Boolean", "java.lang.Integer", "java.lang.String", "java.util.ArrayList", "java.util.TreeMap", "java.util.Vector"};
    
    private boolean _editable = false;
    
    // private java.awt.GridBagConstraints _objectEditorConstraints = new java.awt.GridBagConstraints(0,1,1,1,1,1,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.BOTH,null,0,0);

    /** Creates new form ObjectTreePanel */
    public ObjectTreePanel() {
        initComponents();
        // these are the classes we can edit
        objectClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes));
        objectClassComboBox.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == e.DESELECTED) {
                } else if (e.getStateChange() == e.SELECTED) {
                    System.out.println("Selection changed " + objectClassComboBox.getSelectedItem());
                }
            }
        });
        // Set up the tree model
        objectTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        objectTree.setModel(new DefaultTreeModel(null));
        // Listen for when the tree selection changes.
        objectTree.addTreeSelectionListener(new TreeSelectionListener() {
            public void valueChanged(TreeSelectionEvent e) {
                TreePath path = objectTree.getSelectionPath();
                if (path == null) {
                    objectPanel.setEnabled(false);
                    objectClassComboBox.setEnabled(false);
                    return;
                }
                objectPanel.setEnabled(true);
                objectClassComboBox.setEnabled(true);
                ObjectTreeNode node = (ObjectTreeNode) path.getLastPathComponent();
                if (node == null) return;
                updateObjectPanel(node.getUserObject());
            }
        });
        // The objectPanel is disabled until we select an object
        objectPanel.setEnabled(false);
        objectClassComboBox.setEnabled(false);
    }
    
    public void setObject(Object object) {
        objectTree.setModel(new DefaultTreeModel(new ObjectTreeNode(object)));
        objectTree.setSelectionPath(null);
    }

    private void updateObjectPanel(Object object) {
        String objectClass = "";
        if (object == null) {
            objectClass = "null";
        } else {
            objectClass = object.getClass().getName();
        }
        
        objectEditorPanel.removeAll();
        objectEditorPanel.validate(); // FIXME! How do we get Swing to update this panel?!?!?
        for (int i=0; i<classes.length; i++) {
            if (objectClass.equals(classes[i])) {
                objectClassComboBox.setSelectedIndex(i);
                System.out.println(object.getClass().getName() + " is " + object.toString());
                if (objectClass.equals("java.lang.Integer")) {
                    System.out.println("Creating IntegerEditorPanel");
                    IntegerEditorPanel iep = new IntegerEditorPanel((Integer)object);
                    iep.setObjectChangeListener(new ObjectChangeListener() {
                        public void objectChanged(ObjectChangeEvent e) {
                            System.out.println("Object is now " + e.getObject());
                        }
                    });
                    objectEditorPanel.add(iep);
                    objectEditorPanel.validate();
                }
                return;
            }
        }
        objectClassComboBox.setSelectedItem(objectClass);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        objectTree = new javax.swing.JTree();
        objectPanel = new javax.swing.JPanel();
        objectClassComboBox = new javax.swing.JComboBox();
        objectEditorPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setResizeWeight(0.5);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(200, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 3));
        jScrollPane1.setViewportView(objectTree);

        jSplitPane1.setLeftComponent(jScrollPane1);

        objectPanel.setLayout(new java.awt.GridBagLayout());

        objectPanel.setMinimumSize(new java.awt.Dimension(150, 100));
        objectPanel.setPreferredSize(new java.awt.Dimension(150, 150));
        objectClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "java.lang.Boolean", "java.lang.Integer", "java.lang.String", "java.util.Vector", "java.util.ArrayList", "java.util.TreeMap" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        objectPanel.add(objectClassComboBox, gridBagConstraints);

        objectEditorPanel.setLayout(new java.awt.BorderLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        objectPanel.add(objectEditorPanel, gridBagConstraints);

        jSplitPane1.setRightComponent(objectPanel);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JComboBox objectClassComboBox;
    private javax.swing.JPanel objectEditorPanel;
    private javax.swing.JPanel objectPanel;
    private javax.swing.JTree objectTree;
    // End of variables declaration//GEN-END:variables

    private class ObjectTreeNode extends DefaultMutableTreeNode {
        
        String _prefix = "";
        
        public ObjectTreeNode(Object object) {
            super(object);
            if (object instanceof Collection) {
                Collection collection = (Collection) object;
                setAllowsChildren(true);
                Iterator it = collection.iterator();
                while (it.hasNext()) {
                    add(new ObjectTreeNode(it.next()));
                }
            } else if (object instanceof Map) {
                Map map = (Map) object;
                setAllowsChildren(true);
                Iterator it = map.keySet().iterator();
                while (it.hasNext()) {
                    Object key = it.next();
                    ObjectTreeNode child = new ObjectTreeNode(map.get(key));
                    child.setPrefix(key.toString());
                    add(child);
                }
            } else {
                setAllowsChildren(false);
            }
        }
        
        public void setPrefix(String prefix) {
            if (prefix == null) {
                _prefix = "";
            } else {
                _prefix = prefix + " : ";
            }
        }
        
        public String toString() {
            if (userObject == null) {
                return _prefix + "null";
            } else {
                return _prefix + userObject.getClass().getName();
            }
        }
        
    }
    
    public static void main(String[] args) {
        javax.swing.JFrame frame = new javax.swing.JFrame("ObjectPanel");

        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                System.exit(0);
            }
        });
        
        ObjectTreePanel otp = new ObjectTreePanel();
        frame.getContentPane().add(otp, java.awt.BorderLayout.CENTER);
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        frame.setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
        Vector v = new Vector();
        v.add(new Integer(1));
        v.add(new Boolean(true));
        TreeMap m = new TreeMap();
        m.put("line1", new Integer(100));
        m.put("line2", new Boolean(false));
        v.add(m);
        otp.setObject(v);
        frame.show();
    }
    
    abstract class ObjectEditorPanel extends JPanel {
        private ObjectChangeListener _changeListener = null;
        
        void setObjectChangeListener(ObjectChangeListener l) {
            _changeListener = l;
        }
        
        void notifyChangeListeners(ObjectChangeEvent e) {
            if (_changeListener != null) {
                _changeListener.objectChanged(e);
            }
        }
    }
    
    private class ObjectChangeEvent {
        Object _object;
        public ObjectChangeEvent(Object o) {
            _object = o;
        }
        
        Object getObject() {
            return _object;
        }
    }
    
    interface ObjectChangeListener {
        void objectChanged(ObjectChangeEvent e);
    }
    
    private class IntegerEditorPanel extends ObjectEditorPanel {
        Integer _integer;
        javax.swing.JTextField _textField;
        
        public IntegerEditorPanel(Integer i) {
            _integer = i;
            setLayout(new java.awt.GridBagLayout());

            _textField = new javax.swing.JTextField(_integer.toString());
            _textField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    try {
                        _integer = new Integer(Integer.parseInt(_textField.getText()));
                    } catch (NumberFormatException nfe) {
                        _textField.setText(_integer.toString());
                        return;
                    }
                    notifyChangeListeners(new ObjectChangeEvent(_integer));
                }
            });
            java.awt.GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 1.0;
            add(_textField, gridBagConstraints);
            
        }
    }
}
