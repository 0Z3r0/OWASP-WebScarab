/*
 * $Id: BeanShellPanel.java,v 1.3 2004/04/19 07:45:30 rogan Exp $
 * ProxyUI.java
 *
 * Created on February 17, 2003, 9:05 PM
 */

package org.owasp.webscarab.ui.swing.proxy;

import org.owasp.webscarab.plugin.proxy.Proxy;
import org.owasp.webscarab.plugin.proxy.module.BeanShell;

import org.owasp.webscarab.ui.swing.SwingPlugin;

import javax.swing.JFrame;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;

import java.io.IOException;

import java.util.Properties;

import javax.swing.ListModel;

import java.util.logging.Logger;

import javax.swing.JPanel;

/**
 *
 * @author  rdawes
 */
public class BeanShellPanel extends javax.swing.JPanel implements SwingPlugin {
    
    private BeanShell _beanShell;
    
    /** Creates new form ManualEditPanel */
    public BeanShellPanel(Proxy proxy) {
        _beanShell = new BeanShell();
        proxy.addPlugin(_beanShell);
        
        initComponents();
        configure();
    }
    
    public String getPluginName() {
        return new String("Bean Shell");
    }
    
    public void configure() {
        boolean enabled = _beanShell.getEnabled();
        enableCheckBox.setSelected(enabled);
        
        scriptFileTextField.setEnabled(enabled);
        scriptFileTextField.setText(_beanShell.getScriptFile());
        
        scriptTextArea.setEnabled(enabled);
        scriptTextArea.setText(_beanShell.getScript());
        
        commitButton.setEnabled(enabled);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        interceptrequestPanel = new javax.swing.JPanel();
        enableCheckBox = new javax.swing.JCheckBox();
        ScriptFileLabel = new javax.swing.JLabel();
        scriptFileTextField = new javax.swing.JTextField();
        scriptLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        scriptTextArea = new javax.swing.JTextArea();
        commitButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        interceptrequestPanel.setLayout(new java.awt.GridBagLayout());

        enableCheckBox.setText("Enabled : ");
        enableCheckBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        enableCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableCheckBoxActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptrequestPanel.add(enableCheckBox, gridBagConstraints);

        ScriptFileLabel.setText("Script File : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptrequestPanel.add(ScriptFileLabel, gridBagConstraints);

        scriptFileTextField.setToolTipText("Use a regular expression to select which URLs to intercept. Leave blank to ignore.");
        scriptFileTextField.setEnabled(false);
        scriptFileTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scriptFileTextFieldActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptrequestPanel.add(scriptFileTextField, gridBagConstraints);

        scriptLabel.setText("Script : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptrequestPanel.add(scriptLabel, gridBagConstraints);

        jScrollPane1.setViewportView(scriptTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        interceptrequestPanel.add(jScrollPane1, gridBagConstraints);

        commitButton.setText("Commit");
        commitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        interceptrequestPanel.add(commitButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(interceptrequestPanel, gridBagConstraints);

    }//GEN-END:initComponents

    private void commitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitButtonActionPerformed
        _beanShell.setScript(scriptTextArea.getText());
    }//GEN-LAST:event_commitButtonActionPerformed

    private void scriptFileTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scriptFileTextFieldActionPerformed
        _beanShell.setScriptFile(scriptFileTextField.getText());
        scriptTextArea.setText(_beanShell.getScript());
    }//GEN-LAST:event_scriptFileTextFieldActionPerformed
            
    private void enableCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableCheckBoxActionPerformed
        boolean enabled = enableCheckBox.isSelected();
        _beanShell.setEnabled(enabled);
        scriptFileTextField.setEnabled(enabled);
        scriptTextArea.setEnabled(enabled);
        commitButton.setEnabled(enabled);
    }//GEN-LAST:event_enableCheckBoxActionPerformed
        
    public JPanel getPanel() {
        return this;
    }    
    
    public javax.swing.Action[] getConversationActions() {
        return null;
    }
    
    public javax.swing.Action[] getURLActions() {
        return null;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ScriptFileLabel;
    private javax.swing.JButton commitButton;
    private javax.swing.JCheckBox enableCheckBox;
    private javax.swing.JPanel interceptrequestPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField scriptFileTextField;
    private javax.swing.JLabel scriptLabel;
    private javax.swing.JTextArea scriptTextArea;
    // End of variables declaration//GEN-END:variables
    
}
