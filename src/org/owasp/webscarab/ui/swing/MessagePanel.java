/*
 * MessagePanel.java
 *
 * Created on November 6, 2003, 8:43 AM
 */

package org.owasp.webscarab.ui.swing;

import org.owasp.webscarab.model.Message;

import java.awt.Dimension;
import javax.swing.event.TableModelListener;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

import java.util.Vector;
/**
 *
 * @author  rdawes
 */
public class MessagePanel extends javax.swing.JPanel {
    
    private ContentPanel _cp;
    private Message _message = null;
    private boolean _editable = false;
    private boolean _modified = false;
    private DefaultTableModel _tableModel;
    private Vector _columns;
    
    /** Creates new form MessagePanel */
    public MessagePanel() {
        initComponents();
        setName("Message");
        
        _columns = new Vector();
        _columns.add("Header");
        _columns.add("Value");
        _tableModel  = new DefaultTableModel(_columns.toArray(), 0);
        _tableModel.addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent e) {
                _modified = true;
            }
        });
        headerTable.setModel(_tableModel);
        headerTable.getColumnModel().getColumn(0).setPreferredWidth(150);
        headerTable.getColumnModel().getColumn(1).setPreferredWidth(500);
        
        _cp = new ContentPanel();
        _cp.setMinimumSize(new Dimension(400, 100));
        messageSplitPane.setRightComponent(_cp);
        setEditable(_editable);
    }
    
    public void setMessage(Message message) {
        _message = message;
        if (message != null) {
            _tableModel.setDataVector(_message.getHeaders(), _columns.toArray());
            headerTable.getColumnModel().getColumn(0).setPreferredWidth(150);
            headerTable.getColumnModel().getColumn(1).setPreferredWidth(500);
            _cp.setContentType(message.getHeader("Content-Type"));
            _cp.setContent(message.getContent());
        } else {
            _tableModel.setDataVector(new Object[0][0], _columns.toArray());
            headerTable.getColumnModel().getColumn(0).setPreferredWidth(150);
            headerTable.getColumnModel().getColumn(1).setPreferredWidth(500);
            _cp.setContentType(null);
            _cp.setContent(null);
        }
        _modified = false;
    }
    
    public Message getMessage() {
        if (_editable) {
            if (_modified) {
                _message.setHeaders(new String[0][2]);
                Vector pairs = _tableModel.getDataVector();
                for (int i=0; i<pairs.size(); i++) {
                    Vector v = (Vector) pairs.elementAt(i);
                    String name = (String) v.elementAt(0);
                    if (name == null || name.equals("")) continue;
                    String value = (String) v.elementAt(1);
                    if (value == null || value.equals("")) continue;
                    _message.addHeader(name, value);
                }
            }
            if (_cp.isModified()) {
                _message.setContent(_cp.getContent());
                if (_message.getHeader("Content-Length") != null) {
                    _message.setHeader("Content-Length", Integer.toString(_message.getContent().length));
                }
            }
        }
        return _message;
    }
    
    public void setEditable(boolean editable) {
        _editable = editable;
        buttonPanel.setVisible(_editable);
        _cp.setEditable(editable);
        java.awt.Color color;
        if (_editable) {
            color = new java.awt.Color(255, 255, 255);
        } else {
            color = new java.awt.Color(204, 204, 204);
        }
        headerTable.setBackground(color);
    }
    
    public boolean isModified() {
        return _editable && (_modified || _cp.isModified());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        messageSplitPane = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        headerTable = new javax.swing.JTable();
        buttonPanel = new javax.swing.JPanel();
        insertButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(402, 102));
        messageSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        messageSplitPane.setResizeWeight(0.2);
        messageSplitPane.setContinuousLayout(true);
        messageSplitPane.setDoubleBuffered(true);
        messageSplitPane.setMaximumSize(null);
        messageSplitPane.setMinimumSize(new java.awt.Dimension(402, 102));
        messageSplitPane.setOneTouchExpandable(true);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(200, 50));
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 50));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(200, 50));
        headerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        headerTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(headerTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        buttonPanel.add(insertButton, gridBagConstraints);

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        buttonPanel.add(deleteButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel1.add(buttonPanel, gridBagConstraints);

        messageSplitPane.setLeftComponent(jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(messageSplitPane, gridBagConstraints);

    }//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int rowIndex = headerTable.getSelectedRow();
        if (rowIndex > -1) {
            _tableModel.removeRow(rowIndex);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        int rowIndex = headerTable.getSelectedRow();
        if (rowIndex > -1) {
            _tableModel.insertRow(rowIndex, new Object[2]);
        } else {
            _tableModel.insertRow(_tableModel.getRowCount(), new Object[2]);
        }
    }//GEN-LAST:event_insertButtonActionPerformed
    
    public static void main(String[] args) {
        byte[] content = new byte[0];
        org.owasp.webscarab.model.Response response = new org.owasp.webscarab.model.Response();
        try {
            String resp = "c:/temp/reverse/conversations/1-response";
            if (args.length == 1) {
                resp = args[0];
            }
            java.io.FileInputStream fis = new java.io.FileInputStream(resp);
            response.read(fis);
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(0);
        }
        
        javax.swing.JFrame top = new javax.swing.JFrame("Message Pane");
        top.getContentPane().setLayout(new java.awt.BorderLayout());
        top.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                System.exit(0);
            }
        });
        
        javax.swing.JButton button = new javax.swing.JButton("GET");
        final MessagePanel mp = new MessagePanel();
        top.getContentPane().add(mp);
        top.getContentPane().add(button, java.awt.BorderLayout.SOUTH);
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                System.out.println(mp.getMessage());
            }
        });
        top.setBounds(100,100,600,400);
        top.show();
        try {
            mp.setEditable(true);
            mp.setMessage(response);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable headerTable;
    private javax.swing.JButton insertButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane messageSplitPane;
    // End of variables declaration//GEN-END:variables
    
}
