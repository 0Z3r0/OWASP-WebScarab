/* Generated By:JJTree: Do not edit this line. JavaOneDotTwoTreeConstants.java */
package org.owasp.webscarab.tool.javaCC;


/**
 * <TODO description>
 *
 * @since release <RELEASE>
 * @version release <RELEASE><br />$Revision: 1.1 $ $Author: istr $
 * @author <AUTHOR>
 */
/**
 * <TODO description>
 *
 * @since release <RELEASE>
 * @version release <RELEASE><br />$Revision: 1.1 $ $Author: istr $
 * @author <AUTHOR>
 */
interface JavaOneDotTwoTreeConstants {
  int JJTCOMPILATIONUNIT = 0;
  int JJTPACKAGEDECLARATION = 1;
  int JJTIMPORTDECLARATION = 2;
  int JJTTYPEDECLARATION = 3;
  int JJTCLASSDECLARATION = 4;
  int JJTMODIFIERS = 5;
  int JJTUNMODIFIEDCLASSDECLARATION = 6;
  int JJTCLASSBODY = 7;
  int JJTNESTEDCLASSDECLARATION = 8;
  int JJTCLASSBODYDECLARATION = 9;
  int JJTMETHODDECLARATIONLOOKAHEAD = 10;
  int JJTINTERFACEDECLARATION = 11;
  int JJTNESTEDINTERFACEDECLARATION = 12;
  int JJTUNMODIFIEDINTERFACEDECLARATION = 13;
  int JJTINTERFACEMEMBERDECLARATION = 14;
  int JJTFIELDDECLARATION = 15;
  int JJTVARIABLEDECLARATORLIST = 16;
  int JJTVARIABLEDECLARATOR = 17;
  int JJTVARIABLEDECLARATORID = 18;
  int JJTVARIABLEINITIALIZER = 19;
  int JJTARRAYINITIALIZER = 20;
  int JJTMETHODDECLARATION = 21;
  int JJTMETHODDECLARATOR = 22;
  int JJTFORMALPARAMETERS = 23;
  int JJTFORMALPARAMETER = 24;
  int JJTCONSTRUCTORDECLARATION = 25;
  int JJTUNMODIFIEDCONSTRUCTORDECLARATION = 26;
  int JJTCONSTRUCTORBODY = 27;
  int JJTEXPLICITCONSTRUCTORINVOCATION = 28;
  int JJTINITIALIZER = 29;
  int JJTTYPE = 30;
  int JJTPRIMITIVETYPE = 31;
  int JJTRESULTTYPE = 32;
  int JJTNAME = 33;
  int JJTNAMELIST = 34;
  int JJTEXPRESSION = 35;
  int JJTASSIGNMENTOPERATOR = 36;
  int JJTCONDITIONALEXPRESSION = 37;
  int JJTCONDITIONALOREXPRESSION = 38;
  int JJTCONDITIONALANDEXPRESSION = 39;
  int JJTINCLUSIVEOREXPRESSION = 40;
  int JJTEXCLUSIVEOREXPRESSION = 41;
  int JJTANDEXPRESSION = 42;
  int JJTEQUALITYEXPRESSION = 43;
  int JJTINSTANCEOFEXPRESSION = 44;
  int JJTRELATIONALEXPRESSION = 45;
  int JJTSHIFTEXPRESSION = 46;
  int JJTADDITIVEEXPRESSION = 47;
  int JJTMULTIPLICATIVEEXPRESSION = 48;
  int JJTUNARYEXPRESSION = 49;
  int JJTPREINCREMENTEXPRESSION = 50;
  int JJTPREDECREMENTEXPRESSION = 51;
  int JJTUNARYEXPRESSIONNOTPLUSMINUS = 52;
  int JJTCASTLOOKAHEAD = 53;
  int JJTPOSTFIXEXPRESSION = 54;
  int JJTCASTEXPRESSION = 55;
  int JJTPRIMARYEXPRESSION = 56;
  int JJTPRIMARYPREFIX = 57;
  int JJTPRIMARYSUFFIX = 58;
  int JJTLITERAL = 59;
  int JJTBOOLEANLITERAL = 60;
  int JJTNULLLITERAL = 61;
  int JJTARGUMENTS = 62;
  int JJTARGUMENTLIST = 63;
  int JJTALLOCATIONEXPRESSION = 64;
  int JJTARRAYDIMSANDINITS = 65;
  int JJTSTATEMENT = 66;
  int JJTLABELEDSTATEMENT = 67;
  int JJTBLOCK = 68;
  int JJTBLOCKSTATEMENT = 69;
  int JJTLOCALVARIABLEDECLARATION = 70;
  int JJTEMPTYSTATEMENT = 71;
  int JJTSTATEMENTEXPRESSION = 72;
  int JJTSWITCHSTATEMENT = 73;
  int JJTSWITCHLABEL = 74;
  int JJTIFSTATEMENT = 75;
  int JJTWHILESTATEMENT = 76;
  int JJTDOSTATEMENT = 77;
  int JJTFORSTATEMENT = 78;
  int JJTFORCONTROL = 79;
  int JJTFORINIT = 80;
  int JJTSTATEMENTEXPRESSIONLIST = 81;
  int JJTFORUPDATE = 82;
  int JJTBREAKSTATEMENT = 83;
  int JJTCONTINUESTATEMENT = 84;
  int JJTRETURNSTATEMENT = 85;
  int JJTTHROWSTATEMENT = 86;
  int JJTSYNCHRONIZEDSTATEMENT = 87;
  int JJTTRYSTATEMENT = 88;
  int JJTCATCHBLOCK = 89;
  int JJTFINALLYBLOCK = 90;
  int JJTTOKEN = 91;
  int JJTKEYWORD = 92;
  String[] jjtNodeName = { "CompilationUnit", "PackageDeclaration", 
                           "ImportDeclaration", "TypeDeclaration", 
                           "ClassDeclaration", "Modifiers", 
                           "UnmodifiedClassDeclaration", "ClassBody", 
                           "NestedClassDeclaration", "ClassBodyDeclaration", 
                           "MethodDeclarationLookahead", "InterfaceDeclaration", 
                           "NestedInterfaceDeclaration", 
                           "UnmodifiedInterfaceDeclaration", 
                           "InterfaceMemberDeclaration", "FieldDeclaration", 
                           "VariableDeclaratorList", "VariableDeclarator", 
                           "VariableDeclaratorId", "VariableInitializer", 
                           "ArrayInitializer", "MethodDeclaration", 
                           "MethodDeclarator", "FormalParameters", 
                           "FormalParameter", "ConstructorDeclaration", 
                           "UnmodifiedConstructorDeclaration", 
                           "ConstructorBody", "ExplicitConstructorInvocation", 
                           "Initializer", "Type", "PrimitiveType", "ResultType", 
                           "Name", "NameList", "Expression", 
                           "AssignmentOperator", "ConditionalExpression", 
                           "ConditionalOrExpression", 
                           "ConditionalAndExpression", "InclusiveOrExpression", 
                           "ExclusiveOrExpression", "AndExpression", 
                           "EqualityExpression", "InstanceOfExpression", 
                           "RelationalExpression", "ShiftExpression", 
                           "AdditiveExpression", "MultiplicativeExpression", 
                           "UnaryExpression", "PreIncrementExpression", 
                           "PreDecrementExpression", 
                           "UnaryExpressionNotPlusMinus", "CastLookahead", 
                           "PostfixExpression", "CastExpression", 
                           "PrimaryExpression", "PrimaryPrefix", 
                           "PrimarySuffix", "Literal", "BooleanLiteral", 
                           "NullLiteral", "Arguments", "ArgumentList", 
                           "AllocationExpression", "ArrayDimsAndInits", 
                           "Statement", "LabeledStatement", "Block", 
                           "BlockStatement", "LocalVariableDeclaration", 
                           "EmptyStatement", "StatementExpression", 
                           "SwitchStatement", "SwitchLabel", "IfStatement", 
                           "WhileStatement", "DoStatement", "ForStatement", 
                           "ForControl", "ForInit", "StatementExpressionList", 
                           "ForUpdate", "BreakStatement", "ContinueStatement", 
                           "ReturnStatement", "ThrowStatement", 
                           "SynchronizedStatement", "TryStatement", 
                           "CatchBlock", "FinallyBlock", "Token", "Keyword" , };
}

